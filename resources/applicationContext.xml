<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-3.2.xsd">
    
    <!-- 配置bean -->
    <bean id="dao" class="com.lyl.dao.impl.UserDaoImpl"/>
    
    <!-- 配置bean -->
    <bean id="service" class="com.lyl.service.impl.UserServiceImpl">
        <!-- 配置属性引用 -->
        <property name="dao" ref="dao"></property>
    </bean>
    
    
    <!-- 声明增强方法所在的Bean -->
    <bean id="theLogger" class="com.lyl.aop.UserServiceLogger"></bean>
    
    <!-- 切面配置 -->
    <aop:config>
        <!-- 
        public * addNewUser(entity.User)： “*”表示匹配所有类型的返回值。
        public void *(entity.User)： “*”表示匹配所有方法名。
        public void addNewUser(..)： “..”表示匹配所有参数个数和类型。
        * com.service.*.*(..)：匹配com.service包下所有类的所有方法。
        * com.service..*.*(..)：匹配com.service包及其子包下所有类的所有方法
         -->
         
         
        <!-- 定义切入点 -->
        <!--  <aop:pointcut expression="execution(public void addNewUser(com.lyl.entity.User))"
            id="pointcut"/> -->
        <aop:pointcut expression="execution(* com.lyl.service.*.*(..))"
            id="pointcut"/>    
            
            
        <!-- 引用包含增强方法的Bean -->
        <aop:aspect ref="theLogger">
            <!-- 将before()方法定义为前置增强,并引用pointcut切入点 -->
            <aop:before method="before" pointcut-ref="pointcut"/>
            
            <!-- 将afterReturning()方法定义为后置增强,并引用pointcut切入点 -->
            <!-- 通过returning属性定义名为result的参数注入返回值 -->
            <aop:after-returning method="afterReturning"
                pointcut-ref="pointcut" returning="result"/>
        </aop:aspect>
    </aop:config>
    
</beans>
